{
    "address": "0xBa74b149332d5eC54e578A7D083C51AB411F2856",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "priceFeed",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "FundMe__NotOwner",
            "type": "error"
        },
        {
            "stateMutability": "payable",
            "type": "fallback"
        },
        {
            "inputs": [],
            "name": "MINIMUM_USD",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "fund",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "funder",
                    "type": "address"
                }
            ],
            "name": "getAddressToAmountFunded",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "index",
                    "type": "uint256"
                }
            ],
            "name": "getFunder",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getOwner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getPriceFeed",
            "outputs": [
                {
                    "internalType": "contract AggregatorV3Interface",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "stateMutability": "payable",
            "type": "receive"
        }
    ],
    "transactionHash": "0x8bf8f858d98d6f1b628b57d7448762affb44ecd24456d8aa3462af9137c11d1a",
    "receipt": {
        "to": null,
        "from": "0x62F6eb210af5d1E9d4C37bDae35F5Cd95E10E50d",
        "contractAddress": "0xBa74b149332d5eC54e578A7D083C51AB411F2856",
        "transactionIndex": 100,
        "gasUsed": "918289",
        "logsBloom": "0x
        "blockHash": "0x3bc96227e40b8b11b0a89e026256006f871506f72da4cfb7994b21f3c90a64a7",
        "transactionHash": "0x8bf8f858d98d6f1b628b57d7448762affb44ecd24456d8aa3462af9137c11d1a",
        "logs": [],
        "blockNumber": 7765899,
        "cumulativeGasUsed": "26351849",
        "status": 1,
        "byzantium": true
    },
    "args": ["0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"],
    "numDeployments": 2,
    "solcInputHash": "b569c58519c3a0b62eab3c4f4911b6b6",
    "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"JussaMouse\",\"details\":\"this implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"notes for devs param parameters taken by this function return the return value of the function\"}},\"title\":\"a contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"NatSpec examplebla\"}},\"notice\":\"this contract was just written as a learning exercise. not fit for production!\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/** @title a contract for crowd funding\\n *  @author JussaMouse\\n *  @notice this contract was just written as a learning exercise. not fit for production!\\n *  @dev this implements price feeds as our library\\n */\\n\\ncontract FundMe {\\n    // type declarations\\n    using PriceConverter for uint256;\\n\\n    // state variable\\n    uint256 public constant MINIMUM_USD = 50 * 10**18;\\n    address private immutable i_owner;\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    // events (none)\\n\\n    // modifiers\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    // functions\\n    constructor(address priceFeed) {\\n        s_priceFeed = AggregatorV3Interface(priceFeed);\\n        i_owner = msg.sender;\\n    }\\n\\n    // receive/ feedback?\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    /** NatSpec example\\n     *  @notice bla\\n     *  @dev notes for devs\\n     *  @ param parameters taken by this function\\n     *  @ return the return value of the function\\n     */\\n    function fund() public payable {\\n        // goal: set a minimum amt of ETH\\n        // how do we send ETH to the contract?\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"Not enough ETH\\\"\\n        );\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    // function withdraw() public onlyOwner {\\n    //     // change all amounts funded to 0 in the mapping\\n    //     for (\\n    //         uint256 funderIndex = 0;\\n    //         funderIndex < s_funders.length;\\n    //         funderIndex++\\n    //     ) {\\n    //         address funder = s_funders[funderIndex];\\n    //         s_addressToAmountFunded[funder] = 0;\\n    //     }\\n    //     // reset the funders array\\n    //     s_funders = new address[](0);\\n    //     // transfer vs call vs send\\n    //     (bool callSuccess, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n    //     require(callSuccess, \\\"Withdrawal failed\\\");\\n    // }\\n\\n    function withdraw() public payable onlyOwner {\\n        // in withdraw() we were reading from storage twice\\n        // in each iteration of the loop\\n        // instead, let's read once to copy to memory\\n        // and subsequently read from that (gas optimizing)\\n        address[] memory funders = s_funders;\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success, \\\"Withdraw failed\\\");\\n    }\\n\\n    // getter functions for private variables:\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x1d02d110bbebc808620333770072e13b5e46a40bf4c2613e1e64cf3d4c708627\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    // call it get fiatConversionRate, since it assumes something about decimals\\n    // It wouldn't work for every aggregator\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversation rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x768506728eb39c8607d3e4852448d6e72c7285db741e960ca10f098a5f32269c\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "0x60a06040523480156200001157600080fd5b50604051620010bb380380620010bb833981810160405281019062000037919062000120565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c610f3c6200017f600039600081816103220152818161051c01526105f90152610f3c6000f3fe6080604052600436106100745760003560e01c8063893d20e81161004e578063893d20e8146100ff5780639e87a5cd1461012a578063b60d428814610155578063d7b4750c1461015f57610083565b80630343fb251461008d5780633ccfd60b146100ca5780636b69a592146100d457610083565b366100835761008161019c565b005b61008b61019c565b005b34801561009957600080fd5b506100b460048036038101906100af9190610874565b6102d7565b6040516100c191906108ba565b60405180910390f35b6100d2610320565b005b3480156100e057600080fd5b506100e96105e8565b6040516100f691906108ba565b60405180910390f35b34801561010b57600080fd5b506101146105f5565b60405161012191906108e4565b60405180910390f35b34801561013657600080fd5b5061013f61061d565b60405161014c919061095e565b60405180910390f35b61015d61019c565b005b34801561016b57600080fd5b50610186600480360381019061018191906109a5565b610647565b60405161019391906108e4565b60405180910390f35b6802b5e3af16b18800006101db600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461068e90919063ffffffff16565b101561021c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021390610a2f565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461026b9190610a7e565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a5576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561042857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116103de575b5050505050905060005b6000805490508110156104b757600082828151811061045457610453610ad4565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104af90610b03565b915050610432565b50600067ffffffffffffffff8111156104d3576104d2610b4c565b5b6040519080825280602002602001820160405280156105015781602001602082028036833780820191505090505b506000908051906020019061051792919061076a565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161055e90610bac565b60006040518083038185875af1925050503d806000811461059b576040519150601f19603f3d011682016040523d82523d6000602084013e6105a0565b606091505b50509050806105e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105db90610c0d565b60405180910390fd5b5050565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080828154811061065c5761065b610ad4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061069a836106ca565b90506000670de0b6b3a764000085836106b39190610c2d565b6106bd9190610cb6565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561071357600080fd5b505afa158015610727573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074b9190610d74565b5050509150506402540be400816107629190610def565b915050919050565b8280548282559060005260206000209081019282156107e3579160200282015b828111156107e25782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061078a565b5b5090506107f091906107f4565b5090565b5b8082111561080d5760008160009055506001016107f5565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061084182610816565b9050919050565b61085181610836565b811461085c57600080fd5b50565b60008135905061086e81610848565b92915050565b60006020828403121561088a57610889610811565b5b60006108988482850161085f565b91505092915050565b6000819050919050565b6108b4816108a1565b82525050565b60006020820190506108cf60008301846108ab565b92915050565b6108de81610836565b82525050565b60006020820190506108f960008301846108d5565b92915050565b6000819050919050565b600061092461091f61091a84610816565b6108ff565b610816565b9050919050565b600061093682610909565b9050919050565b60006109488261092b565b9050919050565b6109588161093d565b82525050565b6000602082019050610973600083018461094f565b92915050565b610982816108a1565b811461098d57600080fd5b50565b60008135905061099f81610979565b92915050565b6000602082840312156109bb576109ba610811565b5b60006109c984828501610990565b91505092915050565b600082825260208201905092915050565b7f4e6f7420656e6f75676820455448000000000000000000000000000000000000600082015250565b6000610a19600e836109d2565b9150610a24826109e3565b602082019050919050565b60006020820190508181036000830152610a4881610a0c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a89826108a1565b9150610a94836108a1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ac957610ac8610a4f565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b0e826108a1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b4157610b40610a4f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b96600083610b7b565b9150610ba182610b86565b600082019050919050565b6000610bb782610b89565b9150819050919050565b7f5769746864726177206661696c65640000000000000000000000000000000000600082015250565b6000610bf7600f836109d2565b9150610c0282610bc1565b602082019050919050565b60006020820190508181036000830152610c2681610bea565b9050919050565b6000610c38826108a1565b9150610c43836108a1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c7c57610c7b610a4f565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610cc1826108a1565b9150610ccc836108a1565b925082610cdc57610cdb610c87565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d0681610ce7565b8114610d1157600080fd5b50565b600081519050610d2381610cfd565b92915050565b6000819050919050565b610d3c81610d29565b8114610d4757600080fd5b50565b600081519050610d5981610d33565b92915050565b600081519050610d6e81610979565b92915050565b600080600080600060a08688031215610d9057610d8f610811565b5b6000610d9e88828901610d14565b9550506020610daf88828901610d4a565b9450506040610dc088828901610d5f565b9350506060610dd188828901610d5f565b9250506080610de288828901610d14565b9150509295509295909350565b6000610dfa82610d29565b9150610e0583610d29565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e4457610e43610a4f565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e8157610e80610a4f565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ebe57610ebd610a4f565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610efb57610efa610a4f565b5b82820290509291505056fea2646970667358221220dd092c2881f4756bd56a4a6b62d21ac173b12e3233ccd64b910c9e1354273f8f64736f6c63430008080033",
    "deployedBytecode": "0x6080604052600436106100745760003560e01c8063893d20e81161004e578063893d20e8146100ff5780639e87a5cd1461012a578063b60d428814610155578063d7b4750c1461015f57610083565b80630343fb251461008d5780633ccfd60b146100ca5780636b69a592146100d457610083565b366100835761008161019c565b005b61008b61019c565b005b34801561009957600080fd5b506100b460048036038101906100af9190610874565b6102d7565b6040516100c191906108ba565b60405180910390f35b6100d2610320565b005b3480156100e057600080fd5b506100e96105e8565b6040516100f691906108ba565b60405180910390f35b34801561010b57600080fd5b506101146105f5565b60405161012191906108e4565b60405180910390f35b34801561013657600080fd5b5061013f61061d565b60405161014c919061095e565b60405180910390f35b61015d61019c565b005b34801561016b57600080fd5b50610186600480360381019061018191906109a5565b610647565b60405161019391906108e4565b60405180910390f35b6802b5e3af16b18800006101db600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461068e90919063ffffffff16565b101561021c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021390610a2f565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461026b9190610a7e565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a5576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561042857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116103de575b5050505050905060005b6000805490508110156104b757600082828151811061045457610453610ad4565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104af90610b03565b915050610432565b50600067ffffffffffffffff8111156104d3576104d2610b4c565b5b6040519080825280602002602001820160405280156105015781602001602082028036833780820191505090505b506000908051906020019061051792919061076a565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161055e90610bac565b60006040518083038185875af1925050503d806000811461059b576040519150601f19603f3d011682016040523d82523d6000602084013e6105a0565b606091505b50509050806105e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105db90610c0d565b60405180910390fd5b5050565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080828154811061065c5761065b610ad4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061069a836106ca565b90506000670de0b6b3a764000085836106b39190610c2d565b6106bd9190610cb6565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561071357600080fd5b505afa158015610727573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074b9190610d74565b5050509150506402540be400816107629190610def565b915050919050565b8280548282559060005260206000209081019282156107e3579160200282015b828111156107e25782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061078a565b5b5090506107f091906107f4565b5090565b5b8082111561080d5760008160009055506001016107f5565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061084182610816565b9050919050565b61085181610836565b811461085c57600080fd5b50565b60008135905061086e81610848565b92915050565b60006020828403121561088a57610889610811565b5b60006108988482850161085f565b91505092915050565b6000819050919050565b6108b4816108a1565b82525050565b60006020820190506108cf60008301846108ab565b92915050565b6108de81610836565b82525050565b60006020820190506108f960008301846108d5565b92915050565b6000819050919050565b600061092461091f61091a84610816565b6108ff565b610816565b9050919050565b600061093682610909565b9050919050565b60006109488261092b565b9050919050565b6109588161093d565b82525050565b6000602082019050610973600083018461094f565b92915050565b610982816108a1565b811461098d57600080fd5b50565b60008135905061099f81610979565b92915050565b6000602082840312156109bb576109ba610811565b5b60006109c984828501610990565b91505092915050565b600082825260208201905092915050565b7f4e6f7420656e6f75676820455448000000000000000000000000000000000000600082015250565b6000610a19600e836109d2565b9150610a24826109e3565b602082019050919050565b60006020820190508181036000830152610a4881610a0c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a89826108a1565b9150610a94836108a1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ac957610ac8610a4f565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b0e826108a1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b4157610b40610a4f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b96600083610b7b565b9150610ba182610b86565b600082019050919050565b6000610bb782610b89565b9150819050919050565b7f5769746864726177206661696c65640000000000000000000000000000000000600082015250565b6000610bf7600f836109d2565b9150610c0282610bc1565b602082019050919050565b60006020820190508181036000830152610c2681610bea565b9050919050565b6000610c38826108a1565b9150610c43836108a1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c7c57610c7b610a4f565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610cc1826108a1565b9150610ccc836108a1565b925082610cdc57610cdb610c87565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d0681610ce7565b8114610d1157600080fd5b50565b600081519050610d2381610cfd565b92915050565b6000819050919050565b610d3c81610d29565b8114610d4757600080fd5b50565b600081519050610d5981610d33565b92915050565b600081519050610d6e81610979565b92915050565b600080600080600060a08688031215610d9057610d8f610811565b5b6000610d9e88828901610d14565b9550506020610daf88828901610d4a565b9450506040610dc088828901610d5f565b9350506060610dd188828901610d5f565b9250506080610de288828901610d14565b9150509295509295909350565b6000610dfa82610d29565b9150610e0583610d29565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e4457610e43610a4f565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e8157610e80610a4f565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ebe57610ebd610a4f565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610efb57610efa610a4f565b5b82820290509291505056fea2646970667358221220dd092c2881f4756bd56a4a6b62d21ac173b12e3233ccd64b910c9e1354273f8f64736f6c63430008080033",
    "devdoc": {
        "author": "JussaMouse",
        "details": "this implements price feeds as our library",
        "kind": "dev",
        "methods": {
            "fund()": {
                "details": "notes for devs param parameters taken by this function return the return value of the function"
            }
        },
        "title": "a contract for crowd funding",
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {
            "fund()": {
                "notice": "NatSpec examplebla"
            }
        },
        "notice": "this contract was just written as a learning exercise. not fit for production!",
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 67,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_funders",
                "offset": 0,
                "slot": "0",
                "type": "t_array(t_address)dyn_storage"
            },
            {
                "astId": 71,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_addressToAmountFunded",
                "offset": 0,
                "slot": "1",
                "type": "t_mapping(t_address,t_uint256)"
            },
            {
                "astId": 74,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_priceFeed",
                "offset": 0,
                "slot": "2",
                "type": "t_contract(AggregatorV3Interface)45"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
            },
            "t_contract(AggregatorV3Interface)45": {
                "encoding": "inplace",
                "label": "contract AggregatorV3Interface",
                "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            }
        }
    }
}
